@model IEnumerable<ApexVolley.Models.Match>
@{
    ViewData["Title"] = "Gestione Partite";
    var canCreate = User.IsInRole("Staff") || User.IsInRole("Admin");
}

<div class="matches-container ">
    <div class="d-flex align-content-center justify-content-center">
        <div class="hero-header h-auto ">
            <div class="hero-background">
                <div class="floating-orb orb-1"></div>
                <div class="floating-orb orb-2"></div>
                <div class="floating-orb orb-3"></div>
                <div class="volleyball-pattern"></div>
            </div>
            <h1 class="hero-title">
                <span class="title-text">Le Nostre</span>
                <span class="title-accent">Partite</span>
            </h1>
            <p class="hero-subtitle">Ogni partita è una storia da raccontare</p>

            @if (canCreate)
            {
                <div class="hero-action">
                    <a asp-action="Create" class="btn-premium">
                        <span class="btn-icon">🏐</span>
                        <span>Nuova Partita</span>
                        <div class="btn-shine"></div>
                    </a>
                </div>
            }
        </div>
    </div>

    <div class=" d-flex align-content-center justify-content-center matches-content">
        @if (Model.Any())
        {
            <div class="desktop-view">
                <div class="table-container @(canCreate ? "has-actions" : "no-actions")">
                    <div class="table-header">
                        <div class="header-cell">Data</div>
                        <div class="header-cell col-avversari">Avversari</div>
                        <div class="header-cell col-luogo">Luogo</div>
                        <div class="header-cell set-header">Set 1</div>
                        <div class="header-cell set-header">Set 2</div>
                        <div class="header-cell set-header">Set 3</div>
                        <div class="header-cell">Risultato</div>
                        @if (canCreate)
                        {
                            <div class="header-cell col-azioni">Azioni</div>
                        }
                    </div>

                    <div class="table-body">
                        @{
                            int index = 0;
                        }
                        @foreach (var match in Model)
                        {
                            var delay = 0.1;
                            var resultClass = GetResultClass(match.Risultato);

                            <div class="match-row animated-row" style="animation-delay: @($"{delay:0.1}s")">
                                <div class="row-glow @resultClass"></div>

                                <div class="match-cell date-cell">
                                    <div class="cell-content">
                                        <span class="date-day">@match.Data.ToString("dd")</span>
                                        <span class="date-month">@match.Data.ToString("MMM")</span>
                                        <span class="date-year">@match.Data.ToString("yyyy")</span>
                                    </div>
                                </div>

                                <div class="match-cell opponent-cell col-avversari">
                                    <div class="cell-content">
                                        <span class="opponent-name">@match.Avversari</span>
                                    </div>
                                </div>

                                <div class="match-cell location-cell col-luogo">
                                    <div class="cell-content">
                                        <span class="location-icon">📍</span>
                                        <span class="location-name">@match.Luogo</span>
                                    </div>
                                </div>

                                <div class="match-cell set-cell">
                                    <div class="set-score">@match.RisultatoSet1</div>
                                </div>

                                <div class="match-cell set-cell">
                                    <div class="set-score">@match.RisultatoSet2</div>
                                </div>

                                <div class="match-cell set-cell">
                                    <div class="set-score">@match.RisultatoSet3</div>
                                </div>

                                <div class="match-cell result-cell">
                                    <div class="result-badge @resultClass">
                                        @match.Risultato
                                    </div>
                                </div>

                                @if (canCreate)
                                {
                                    <div class="match-cell actions-cell col-azioni">
                                        <div class="action-buttons">
                                            <a asp-action="Edit" asp-route-id="@match.Id" class="action-btn edit-btn" title="Modifica">
                                                <span class="btn-icon">✏️</span>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@match.Id" class="action-btn delete-btn" title="Elimina">
                                                <span class="btn-icon">🗑️</span>
                                            </a>
                                        </div>
                                    </div>
                                }
                            </div>
                            index++;
                        }
                    </div>
                </div>
            </div>

            <div class="mobile-view">
                @{
                    index = 0;
                }
                @foreach (var match in Model)
                {
                    var delay = 0.1 * index;
                    var resultClass = GetResultClass(match.Risultato);

                    <div class="match-card animated-card" style="animation-delay: @($"{delay:0.1}s")">
                        <div class="card-glow @resultClass"></div>

                        <div class="card-header">
                            <div class="match-date">
                                <span class="date-day">@match.Data.ToString("dd")</span>
                                <span class="date-month">@match.Data.ToString("MMM")</span>
                            </div>
                            <div class="result-badge @resultClass">
                                @match.Risultato
                            </div>
                        </div>

                        <div class="card-body">
                            <div class="opponent-section">
                                <h3 class="opponent-name">@match.Avversari</h3>
                                <p class="match-location">
                                    <span class="location-icon">📍</span>
                                    @match.Luogo
                                </p>
                            </div>

                            <div class="sets-section">
                                <div class="sets-title">Punteggi Set</div>
                                <div class="sets-scores">
                                    <div class="set-item">
                                        <span class="set-label">Set 1</span>
                                        <span class="set-value">@match.RisultatoSet1</span>
                                    </div>
                                    <div class="set-item">
                                        <span class="set-label">Set 2</span>
                                        <span class="set-value">@match.RisultatoSet2</span>
                                    </div>
                                    <div class="set-item">
                                        <span class="set-label">Set 3</span>
                                        <span class="set-value">@match.RisultatoSet3</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (canCreate)
                        {
                            <div class="card-actions">
                                <a asp-action="Edit" asp-route-id="@match.Id" class="action-btn edit-btn">
                                    <span class="btn-icon">✏️</span>
                                    <span>Modifica</span>
                                </a>
                                <a asp-action="Delete" asp-route-id="@match.Id" class="action-btn delete-btn">
                                    <span class="btn-icon">🗑️</span>
                                    <span>Elimina</span>
                                </a>
                            </div>
                        }
                    </div>
                    index++;
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">🏐</div>
                <h3>Nessuna partita programmata</h3>
                <p>Le prossime sfide appariranno qui</p>
                @if (canCreate)
                {
                    <a asp-action="Create" class="btn-secondary">
                        Programma la prima partita
                    </a>
                }
            </div>
        }
    </div>
</div>

@functions {
    private string GetResultClass(string risultato)
    {
        if (string.IsNullOrEmpty(risultato)) return "result-pending";

        var result = risultato.ToLower().Trim();

        if (result.Contains("vittoria") || result.Contains("vint") || result.Contains("win"))
            return "result-victory";
        else if (result.Contains("sconfitta") || result.Contains("pers") || result.Contains("loss"))
            return "result-defeat";
        else if (result.Contains("pareggio") || result.Contains("pari") || result.Contains("draw"))
            return "result-draw";
        else
            return "result-pending";
    }
}

<style>
    @@keyframes float {
        0%, 100%

    {
        transform: translateY(0px) rotate(0deg);
    }

    33% {
        transform: translateY(-25px) rotate(120deg);
    }

    66% {
        transform: translateY(15px) rotate(240deg);
    }

    }
    @@keyframes rotate {
        from

    {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    to {
        transform: translate(-50%, -50%) rotate(360deg);
    }

    }

   
    @@keyframes slideInFromLeft {
        from

    {
        transform: translateX(-100px);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }
    @@keyframes slideInFromRight {
        from

    {
        transform: translateX(100px);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }
    @@keyframes fadeInUp {
        from

    {
        transform: translateY(30px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }
    @@keyframes gradientShift {
        0%, 100%

    {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    }

    
    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100%

    {
        transform: translateY(0);
    }

    40% {
        transform: translateY(-5px);
    }

    60% {
        transform: translateY(-3px);
    }

    }

    @@keyframes rowEntrance {
        to

    {
        opacity: 1;
        transform: translateX(0);
    }

    }

    @@keyframes cardEntrance {
        to

    {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Responsive */
    @@media (max-width: 1200px) {
        .table-container.no-actions .table-header, .table-container.no-actions .match-row

    {
        grid-template-columns: 100px minmax(150px, 1.5fr) minmax(120px, 1fr) 70px 70px 70px 100px;
    }

    .table-container.has-actions .table-header,
    .table-container.has-actions .match-row {
        grid-template-columns: 100px minmax(150px, 1.5fr) minmax(120px, 1fr) 70px 70px 70px 100px 100px;
    }

    .table-header, .match-row {
        gap: 15px;
        padding-left: 20px;
        padding-right: 20px;
    }

    .header-cell, .match-cell {
        font-size: 0.85rem;
    }

    .date-day {
        font-size: 1.6rem;
    }

    .opponent-name {
        font-size: 1rem;
    }

    }

    @@media (max-width: 992px) {
        .table-container.no-actions .table-header, .table-container.no-actions .match-row

    {
        grid-template-columns: 80px minmax(120px, 1.5fr) minmax(100px, 1fr) 60px 60px 60px 90px;
    }

    .table-container.has-actions .table-header,
    .table-container.has-actions .match-row {
        grid-template-columns: 80px minmax(120px, 1.5fr) minmax(100px, 1fr) 60px 60px 60px 90px 90px;
    }

    .table-header, .match-row {
        gap: 10px;
        padding: 15px 15px;
    }

    .header-cell, .match-cell {
        font-size: 0.8rem;
    }

    .date-day {
        font-size: 1.4rem;
    }

    .date-month {
        font-size: 0.7rem;
    }

    .opponent-name {
        font-size: 0.9rem;
    }

    .location-name {
        font-size: 0.8rem;
    }

    .set-score {
        font-size: 0.8rem;
        padding: 6px 8px;
        min-width: 50px;
    }

    .result-badge {
        font-size: 0.7rem;
        padding: 6px 12px;
    }

    .actions-cell .action-btn {
        width: 34px;
        height: 34px;
    }
        /* Leggermente più piccolo */
        .actions-cell .action-btn .btn-icon {
            font-size: 1rem;
        }

    .hero-title .title-text {
        font-size: 2.2rem;
    }

    .hero-title .title-accent {
        font-size: 3.5rem;
    }

    .hero-subtitle {
        font-size: 1.1rem;
    }

    }

    @@media (max-width: 768px) {
        .desktop-view

    {
        display: none;
    }

    .mobile-view {
        display: block;
    }

    .hero-header {
        padding: 60px 15px 40px;
    }

    .hero-title .title-text {
        font-size: 2rem;
    }

    .hero-title .title-accent {
        font-size: 3rem;
    }

    .hero-subtitle {
        font-size: 1rem;
        margin-bottom: 30px;
    }

    .btn-premium {
        padding: 14px 28px;
        font-size: 1rem;
    }

        .btn-premium .btn-icon {
            font-size: 1.2rem;
        }



    .sets-scores {
        flex-wrap: wrap;
    }

    .set-item {
        flex-basis: calc(33.333% - 8px);
    }

    .empty-state h3 {
        font-size: 1.5rem;
    }

    .empty-state p {
        font-size: 0.9rem;
    }

    .btn-secondary {
        padding: 10px 20px;
        font-size: 0.9rem;
    }

    }

    @@media (max-width: 480px) {
        .hero-title .title-text

    {
        font-size: 1.8rem;
    }

    .hero-title .title-accent {
        font-size: 2.5rem;
    }

    .hero-subtitle {
        font-size: 0.9rem;
    }

    .btn-premium {
        padding: 12px 20px;
        font-size: 0.9rem;
        gap: 8px;
    }

        .btn-premium .btn-icon {
            font-size: 1rem;
        }

    .match-card .opponent-section .opponent-name {
        font-size: 1.1rem;
    }

    .match-card .match-location {
        font-size: 0.8rem;
    }

    .sets-scores {
        flex-direction: column;
        gap: 8px;
    }

    .set-item {
        flex-basis: 100%;
    }

    .card-actions .action-btn {
        font-size: 0.8rem;
        padding: 10px;
    }

        .card-actions .action-btn .btn-icon {
            font-size: 0.9rem;
        }

    }
</style>
<!-- Footer -->
        <footer class="border-top footer text-muted">
            <div class="container text-center">
                <p>
                    &copy; 2025 - ApexVolley -
                    <a href="/" class="text-apex-gold">Home</a> |
                    <a href="mailto:info@apexvolley.it" class="text-apex-gold">Contatti</a> |
                    <a asp-controller="Home" asp-action="Privacy" class="text-apex-gold">Privacy</a>
                </p>
            </div>
        </footer>